{"version":3,"sources":["component/calculator.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","clear","setState","result","backspace","state","slice","HandleClick","button","calculate","reset","checkResult","includes","replace","eval","e","className","this","value","onClick","target","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.410e3b99.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../css/style.css'\r\nclass Calculator extends Component {\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n            result:\"\"\r\n        } \r\n    }\r\n    clear = () => {\r\n        this.setState({\r\n            result: \"\"\r\n        })\r\n    };\r\n    backspace = () => {\r\n        this.setState({\r\n            result: this.state.result.slice(0, -1)\r\n        })\r\n    };\r\n    HandleClick = button => {\r\n\r\n        if(button === \"=\"){\r\n            this.calculate()\r\n        }\r\n\r\n        else if(button === \"C\"){\r\n            this.reset()\r\n        }\r\n        else if(button === \"CE\"){\r\n            this.backspace()\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                result: this.state.result + button\r\n            })\r\n        }\r\n    };\r\n    calculate = () => {\r\n        var checkResult = ''\r\n        if(this.state.result.includes('--')){\r\n            checkResult = this.state.result.replace('--','+')\r\n        }\r\n\r\n        else {\r\n            checkResult = this.state.result\r\n        }\r\n\r\n        try {\r\n            this.setState({\r\n                result: (eval(checkResult) || \"\" ) + \"\"\r\n            })\r\n        } catch (e) {\r\n            this.setState({\r\n                result: \"error\"\r\n            })\r\n\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"calculator\">\r\n                <h1>calculator</h1>\r\n                <div className=\"output\">\r\n                <h2>{this.state.result}</h2>\r\n                </div>\r\n                <div className=\"keypad\">\r\n                    <button value=\"(\" onClick={(e)=>this.HandleClick(e.target.value)}>(</button>\r\n                    <button value=\"CE\" onClick={this.backspace}>CE</button>\r\n                    <button value=\")\" onClick={(e)=>this.HandleClick(e.target.value)}>)</button>\r\n                    <button value=\"C\" onClick={this.clear}>C</button>\r\n                    <button value=\"1\" onClick={(e)=>this.HandleClick(e.target.value)}>1</button>\r\n                    <button value=\"2\" onClick={(e)=>this.HandleClick(e.target.value)}>2</button>\r\n                    <button value=\"3\" onClick={(e)=>this.HandleClick(e.target.value)}>3</button>\r\n                    <button value=\"+\" onClick={(e)=>this.HandleClick(e.target.value)}>+</button>\r\n                    <button value=\"4\" onClick={(e)=>this.HandleClick(e.target.value)}>4</button>\r\n                    <button value=\"5\" onClick={(e)=>this.HandleClick(e.target.value)}>5</button>\r\n                    <button value=\"6\" onClick={(e)=>this.HandleClick(e.target.value)}>6</button>\r\n                    <button value=\"-\" onClick={(e)=>this.HandleClick(e.target.value)}>-</button>\r\n                    <button value=\"7\" onClick={(e)=>this.HandleClick(e.target.value)}>7</button>\r\n                    <button value=\"8\" onClick={(e)=>this.HandleClick(e.target.value)}>8</button>\r\n                    <button value=\"9\" onClick={(e)=>this.HandleClick(e.target.value)}>9</button>\r\n                    <button value=\"*\" onClick={(e)=>this.HandleClick(e.target.value)}>*</button>\r\n                    <button value=\".\" onClick={(e)=>this.HandleClick(e.target.value)}>.</button>\r\n                    <button value=\"0\" onClick={(e)=>this.HandleClick(e.target.value)}>0</button>\r\n                    <button value=\"=\" onClick={(e)=>this.HandleClick(e.target.value)}>=</button>\r\n                    <button value=\"/\" onClick={(e)=>this.HandleClick(e.target.value)}>/</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Calculator;","import React from 'react';\nimport Calculator from '../src/component/calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}